Compiler commands:

gsc run     [filename? = main.gs]

gsc build   [filename? = main.gs]

gsc update  [filename? = main.gs]

gsc upgrade [filename? = main.gs]

gsr run     [filename? = program.gsb]

Compiler stages:

[1] Prerequisites
-> find or clone all direct external dependencies of the specified application
-> recursively resolve transitive dependencies of the direct dependencies until all dependencies have been cloned
-> default /usr/bin/gsc compiler binary path
-> default /usr/bin/gsr runtime binary path
-> default /usr/lib/gsc/std
-> default /usr/lib/gsc/vendor
-> $GSCSTD defines an override for the standard path
-> $GSCVENDOR defines an override for the vendor path

[2] Preprocess
-> Read the entire sourcecode into memory
-> For each module:
    Merge all files in the module into one blob
    dedupe imports
    prefix all symbols with the module name
    replace all external symbol references with their expected name after the merge (module_symbol)
    expand shortcodes
-> merge all module blobs into a final blobs

[3] Tokenize
